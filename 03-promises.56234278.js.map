{"mappings":"YAAA,IAAMA,EAAWC,SAASC,cAAc,gBAClCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAWJ,SAASC,cAAc,wBA0CxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjDPL,EAAaY,iBAAiB,SAK9B,SAAsBC,GACpBC,QAAQC,IAAIf,EAAaa,M,IAL3BX,EAASU,iBAAiB,SAY1B,SAA0BI,GACxBF,QAAQC,IAAIb,EAASW,M,IAZvBZ,EAAYW,iBAAiB,SAO7B,WACEE,QAAQC,IAAId,EAAYY,M,IAP1BhB,EAASe,iBAAiB,SAc1B,WAME,IALA,IAAIK,EAAef,EAASW,MACxBK,EAAmBlB,EAAaa,MAI3BM,GAHalB,EAAYY,MAGrB,GAAGM,GAAKF,EAAcE,GAAK,EACtChB,EAAcgB,EAAGD,EAAiBC,GAC/BC,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBS,QAAQC,IAAI,uBAAwCO,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAE3DkB,OAAM,SAAAF,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBS,QAAQC,IAAI,sBAAuCO,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAE1DmB,SAAQ,WACPV,QAAQC,IAAI,O","sources":["src/js/03-promises.js"],"sourcesContent":["const buttonEl = document.querySelector('.form button');\nconst firstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst delayStepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n\nfirstDelayEl.addEventListener('input', onFirstDelay);\namountEl.addEventListener('input', onAmountPromises);\ndelayStepEl.addEventListener('input', onDelayStep);\nbuttonEl.addEventListener('click', onCreatePromiseBtn);\n\nfunction onFirstDelay(value) {\n  console.log(firstDelayEl.value);\n}\n\nfunction onDelayStep() {\n  console.log(delayStepEl.value);\n}\n\nfunction onAmountPromises(number) {\n  console.log(amountEl.value);\n}\n\nfunction onCreatePromiseBtn() {\n  let amountNumber = amountEl.value;\n  let firstDelayOption = firstDelayEl.value;\n  let delayStepOption = delayStepEl.value;\n\n\n  for (let i = 1; i <= amountNumber; i += 1) {\n    createPromise(i, firstDelayOption*i, delayStepOption)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      })  \n      .finally(() => {\n        console.log('тест');\n      \n      \n    })\n    \n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n"],"names":["$ce04d3a99e08e73b$var$buttonEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","$ce04d3a99e08e73b$var$delayStepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","value","console","log","number","amountNumber","firstDelayOption","i","then","param","concat","catch","finally"],"version":3,"file":"03-promises.56234278.js.map"}