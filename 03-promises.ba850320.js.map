{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,uDAQA,MAAMC,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAWH,SAASC,cAAc,wBAClCG,EAASJ,SAASC,cAAc,SAOtC,SAASI,IAEP,OADuBN,EAAaO,K,CAItC,SAASC,IAEP,OADsBL,EAAYI,K,CAIpC,SAASE,IAEP,OADmBL,EAASG,K,CA0B9B,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApDbZ,EAAamB,iBAAiB,QAASb,GACvCF,EAASe,iBAAiB,QAASV,GACnCN,EAAYgB,iBAAiB,QAASX,GACtCH,EAAOc,iBAAiB,UAiBxB,SAAsBC,GACnBA,EAAEC,iBACH,IAAIC,EAAgBb,IAChBc,EAAQC,OAAOlB,KACfmB,EAAOD,OAAOhB,KAElB,IAAK,IAAIkB,EAAI,EAAGA,GAAKJ,EAAeI,GAAK,EACvChB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBnB,QAAiBC,MAAU,IAGnDmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBrB,QAAeC,MAAU,IAGnDW,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Block } from 'notiflix/build/notiflix-block-aio';\n\nconst firstDelayEl = document.querySelector('input[name=\"delay\"]');\nconst delayStepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\n\nfirstDelayEl.addEventListener('input', onFirstDelay);\namountEl.addEventListener('input', onAmountPromises);\ndelayStepEl.addEventListener('input', onDelayStep);\nformEl.addEventListener('submit', onSubmitForm);\n\nfunction onFirstDelay() {\n  let firstDelayOption = firstDelayEl.value;\n  return firstDelayOption;\n}\n\nfunction onDelayStep() {\n  let delayStepOption = delayStepEl.value;\n  return delayStepOption;\n}\n\nfunction onAmountPromises() {\n  let amountNumber = amountEl.value;\n  return amountNumber;\n}\n\nfunction onSubmitForm(e) {\n   e.preventDefault();\n  let promiseNumber = onAmountPromises();\n  let delay = Number(onFirstDelay());\n  let step = Number(onDelayStep());\n  \n  for (let i = 1; i <= promiseNumber; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelayEl","document","querySelector","$47d4ff9957288465$var$delayStepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$onFirstDelay","value","$47d4ff9957288465$var$onDelayStep","$47d4ff9957288465$var$onAmountPromises","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","promiseNumber","delay1","Number","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ba850320.js.map"}